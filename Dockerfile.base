# Stage 1: Builder
FROM python:3.13-slim AS builder

WORKDIR /code

RUN apt-get update && apt-get install -y --no-install-recommends \
    curl wget unzip xvfb nodejs npm \
    libnss3 libnspr4 libatk1.0-0 libatk-bridge2.0-0 libcups2 \
    libxkbcommon0 libatspi2.0-0 libxdamage1 libpango-1.0-0 \
    libcairo2 libasound2 libsecret-1-0 libgles2 \
    libgtk-3-0 libgdk-pixbuf2.0-0 libpangocairo-1.0-0 libcairo-gobject2 \
    libgtk-3-dev libglib2.0-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

RUN pip install --no-cache-dir poetry==2.1.3
COPY pyproject.toml poetry.lock* ./
RUN poetry config virtualenvs.create false && poetry install --no-root --no-interaction

RUN pip install --no-cache-dir playwright crawl4ai

# Install Chromium only to use later in runtime
RUN poetry run playwright install chromium

# Clean caches
RUN rm -rf /root/.cache/pip /root/.cache/ms-playwright /root/.cache/pypoetry

# Stage 2: Runtime
FROM python:3.13-slim

WORKDIR /code

# Install minimal runtime deps only
RUN apt-get update && apt-get install -y --no-install-recommends \
    xvfb nodejs npm \
    libnss3 libnspr4 libatk1.0-0 libatk-bridge2.0-0 libcups2 \
    libxkbcommon0 libatspi2.0-0 libxdamage1 libpango-1.0-0 \
    libcairo2 libasound2 libsecret-1-0 libgles2 \
    libgtk-3-0 libgdk-pixbuf2.0-0 libpangocairo-1.0-0 libcairo-gobject2 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy from builder only whatâ€™s needed
COPY --from=builder /usr/local /usr/local
COPY --from=builder /code /code

# Set entrypoint later in final app layer
